#!/bin/bash
# shellcheck disable=SC2059,SC1091

go_install() {

    if go version > /dev/null 2>&1; then
        printf "Go is already installed. Version: %s\n" "$(go version | awk '{print $3}')"
        printf "Remove the existing version of Go before continuing.\n"
        return 1
    fi

    # Download Go
    if ! curl -fsSL -o /tmp/go1.23.3.linux-amd64.tar.gz https://go.dev/dl/go1.23.3.linux-amd64.tar.gz; then
        printf "There was a problem downloading Go.\n" && return 1
    fi

    # Extract Go to /usr/local/ 
    if [[ -f /tmp/go1.23.3.linux-amd64.tar.gz ]]; then
        if ! sudo tar -C /usr/local -xzf /tmp/go1.23.3.linux-amd64.tar.gz; then
            printf >&2 "There was a problem unzipping the Go tarball.\n" && return 1
        fi
    else
        printf >&2 "Go tarball not found in /tmp/ - Download failed?.\n"
    fi

    # Add Go to PATH if it's not already
    if ! printf "$PATH" | grep -q '/go/bin'; then
        printf "Go was not found in PATH.\n"
        printf "Adding Go to PATH...\n"
        printf "export PATH=\$PATH:/usr/local/go/bin\n" >> ~/.bashrc
        printf "Go added to PATH.\n"
        # Reload bash
        source "$HOME/.bashrc"
    else
        printf "Go already exists in PATH. Not adding it.\n"
    fi

    # Confirm Installation
    if go version; then
        printf "\e[32mGo was successfully installed.\e[0m\n"
        return 0
    fi
    printf "There was a problem downloading Go.\n"
    return 1
}

if ! go_install; then
    printf "Could not install Go.\n"
fi

